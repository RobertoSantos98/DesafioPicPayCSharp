// <auto-generated />
using System;
using DesafioPicPay.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DesafioPicPay.Migrations
{
    [DbContext(typeof(DbConnection))]
    [Migration("20250707230245_CriandoBancoDados")]
    partial class CriandoBancoDados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DesafioPicPay.Domain.Models.Carteira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CpfCnpj")
                        .IsUnique();

                    b.ToTable("Carteira");
                });

            modelBuilder.Entity("DesafioPicPay.Domain.Models.Transferencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprovada")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataTransferencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPagador")
                        .HasColumnType("integer");

                    b.Property<int>("IdRecebedor")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdPagador");

                    b.HasIndex("IdRecebedor");

                    b.ToTable("Transferencia");
                });

            modelBuilder.Entity("DesafioPicPay.Domain.Models.Transferencia", b =>
                {
                    b.HasOne("DesafioPicPay.Domain.Models.Carteira", "Pagador")
                        .WithMany()
                        .HasForeignKey("IdPagador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Tranferencia_Pagador");

                    b.HasOne("DesafioPicPay.Domain.Models.Carteira", "Recebedor")
                        .WithMany()
                        .HasForeignKey("IdRecebedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Tranferencia_Recebedor");

                    b.Navigation("Pagador");

                    b.Navigation("Recebedor");
                });
#pragma warning restore 612, 618
        }
    }
}
